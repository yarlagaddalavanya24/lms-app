
name: eks deployment

on:
  push

jobs:
  deployment:
    runs-on: self-hosted
    environment: production
    steps:
      - name: Slack Notification - Start
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "GitHub Actions workflow for LMS EKS deployment has started.",
              "channel": "all-project"
            }
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Update AWS CLI
        run: |
          sudo apt install unzip -y
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: Install kubectl
        run: |
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.31.3/2024-12-12/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/
      - name: Install Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sh get-docker.sh
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Connect to EKS Cluster
        run: aws eks update-kubeconfig --region us-east-1 --name lms_cluster

      - name: Apply Database Resources
        run: |
          kubectl apply -f k8s/pg-secret.yml validate=false
          kubectl apply -f k8s/pg-deployment.yml
          kubectl apply -f k8s/pg-service.yml
   
