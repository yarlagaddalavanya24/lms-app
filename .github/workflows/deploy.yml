name: eks deploy
on:
  push:
    branches: [ main ]
jobs:
  eks-deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Notify start
        run: echo "🚀 Starting EKS deployment..."
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set Image Tags (optional)
        run: |
          echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "FE_IMAGE_TAG=lavanyayarlagadda24/frontend:${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "BE_IMAGE_TAG=lavanyayarlagadda24/api:${GITHUB_SHA::7}" >> $GITHUB_ENV
      # ✅ Correct AWS credentials configuration
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.33.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin
          kubectl version --client

      - name: Update kubeconfig to connect to EKS
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Deploy Database (PostgreSQL)
        run: |
          kubectl apply -f k8s/pg-secret.yml
          kubectl apply -f k8s/pg-deployment.yml
          kubectl apply -f k8s/pg-service.yml

      - name: Deploy Backend
        run: |
          kubectl apply -f k8s/be-configmap.yml
          kubectl apply -f k8s/be-deployment.yml
          kubectl apply -f k8s/be-service.yml

      - name: Wait for Backend LoadBalancer
        id: get-be-url
        run: |
          for i in {1..30}; do
            BE_URL=$(kubectl get svc be-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' 2>/dev/null)
            if [ "$BE_URL" != "" ]; then
              echo "✅ Found backend URL: http://$BE_URL"
              echo "BACKEND_URL=http://$BE_URL" >> $GITHUB_ENV
              break
            fi
            echo "⏳ Waiting for backend LoadBalancer..."
            sleep 10
          done

      - name: Debug Pending Pods
        run: |
          echo "🔍 Describing all pending pods..."
          for pod in $(kubectl get pods --field-selector=status.phase=Pending -o jsonpath="{.items[*].metadata.name}"); do
            echo "-----------------------------"
            echo "📝 Describing pod: $pod"
            kubectl describe pod $pod
          done

      - name: Update Frontend .env with Backend URL
        run: |
          echo "REACT_APP_BACKEND_URL=$BACKEND_URL" > frontend/.env

      - name: Deploy Frontend
        run: |
          kubectl apply -f k8s/fe-deployment.yml
          kubectl apply -f k8s/fe-service.yml

      - name: Get Final Pod and Service Info
        run: |
          kubectl get pods -o wide
          kubectl get svc -o wide

      - name: Finish
        run: echo "✅ EKS Deployment completed successfully."
