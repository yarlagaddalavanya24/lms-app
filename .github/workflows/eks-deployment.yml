name: Deploy LMS (All Services)

on:
  workflow_dispatch

jobs:
  notify-start:
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification - Start
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook-type: incoming-webhook
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "GitHub Actions workflow for LMS EKS deployment has started.",
              "channel": "all-project"
            }

  call-database-workflow:
    uses: ./.github/workflows/database.yml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  backend:
    uses: ./.github/workflows/backend.yml
    with:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
    secrets:
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  frontend:
    uses: ./.github/workflows/frontend.yml
    with:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
    secrets:
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  get-loadbalancer-urls:
    needs: frontend
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name lms

      - name: Wait for LoadBalancers to be assigned
        run: sleep 60

      - name: Get Backend LoadBalancer URL
        run: |
          BACKEND_URL=$(kubectl get svc backend-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "Backend LoadBalancer URL: http://$BACKEND_URL"

      - name: Get Frontend LoadBalancer URL
        run: |
          FRONTEND_URL=$(kubectl get svc frontend-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "Frontend LoadBalancer URL: http://$FRONTEND_URL"

  notify-success:
    if: ${{ success() }}
    needs: get-loadbalancer-urls
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification - Success
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook-type: incoming-webhook
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "LMS Deployment completed successfully!",
              "channel": "all-project"
            }

  notify-failure:
    if: ${{ failure() }}
    needs: [call-database-workflow, backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Slack Notification - Failure
        uses: slackapi/slack-github-action@v2.1.0
        with:
          webhook-type: incoming-webhook
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "LMS Deployment failed. Please check logs.",
              "channel": "all-project"
            }



